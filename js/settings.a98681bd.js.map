{"version":3,"sources":["webpack:///./src/bisconfig-common.ts","webpack:///./node_modules/@vuelidate/core/dist/index.esm.js","webpack:///./node_modules/@vuelidate/validators/dist/index.esm.js","webpack:///./src/components/BisConfig/BisConfigNumSetting.vue?3ef3","webpack:///./src/components/BisConfig/BisConfigNumSetting.vue","webpack:///./src/components/BisConfig/BisConfigBoolSetting.vue?9c9a","webpack:///./src/components/BisConfig/BisConfigBoolSetting.vue","webpack:///./src/components/BisConfig/BisConfig.vue?202f","webpack:///./src/components/BisConfig/BisConfig.vue","webpack:///./src/views/BisSettings.vue?804c","webpack:///./src/views/BisSettings.vue","webpack:///./src/components/BisConfig/BisConfigNumSetting.vue?88fb","webpack:///./src/components/BisConfig/BisConfigBoolSetting.vue?5f1f","webpack:///./src/components/BisConfig/BisConfig.vue?65dc"],"names":["BisConfigSettingNameNumeric","BisConfigSettingNameBoolean","BisControlConfigUI","num","signalStoringTime","label","defaultValue","minRangeValue","maxRangeValue","signalCompletenessPercent","stationVisibilityThreshold","stationReceivingThreshold","stationReceivingErrorThreshold","residualPairsDifferenceThreshold","residualAverageDifferenceThreshold","ephemeridesControlThreshold","digitalInfoTransmittingDelayThreshold","minElevationForNavSolution","signalValidityPercent","signalValidityAnalyzingTime","stationValidityThreshold","stationValidityErrorThreshold","bool","useSingleFreqNka","checkPacketReceiveTime","checkDiReceiveInTime","unwrapObj","obj","ignoreKeys","arguments","length","undefined","Object","keys","reduce","o","k","includes","isFunction","val","isProxy","value","get","stringPath","def","current","path","split","i","gatherBooleanGroupProperties","group","nestedResults","property","some","gatherArrayGroupProperties","all","fetchedProperty","concat","callRule","rule","siblingState","instance","call","normalizeValidatorResponse","result","$valid","createAsyncResult","model","$pending","$dirty","_ref","$response","$lazy","$rewardEarly","watchTargets","$lastInvalidState","$lastCommittedOn","$invalid","$pendingCounter","$unwatch","ruleResult","err","Promise","reject","resolve","then","data","catch","error","immediate","deep","createSyncResult","_ref2","returnValue","createValidatorResult","config","validatorName","propertyKey","propertyPath","$params","$async","$validator","$watchTargets","message","$message","$model","$propertyPath","$property","sortValidations","validationsRaw","validations","validationKeys","rules","nestedValidators","validationGroups","forEach","key","v","startsWith","_empty","ROOT_PATH","_call","body","direct","e","_callIgnored","_invoke","_async","f","args","apply","this","createValidationResults","resultsCache","externalResults","ruleKeys","cachedResult","$partial","$path","$touch","$reset","$commit","ruleKey","$externalResults","map","stringError","index","$uid","r","$error","$silentErrors","filter","res","$errors","Date","now","set","collectNestedValidationResults","nestedState","nestedExternalResults","nestedValidationKeys","results","nestedKey","setValidations","state","parentKey","globalConfig","createMetaFields","childResults","allResults","allRes","values","every","modelErrors","nestedErrors","errors","$anyDirty","nr","$validate","mergedConfig","unwatch","assign","s","cachedExternalResults","$validationGroups","entries","external","$getResultsForChild","$clearExternalResults","$autoDirty","flush","storage","Map","storedRules","storedRulesKeys","newRulesKeys","hasAllValidators","paramKey","storedRuleResultPair","isValidCache","checkRulesValidity","CollectFlag","COLLECT_ALL","COLLECT_NONE","VuelidateInjectChildResults","Symbol","VuelidateRemoveChildResults","nestedValidations","$scope","childResultsRaw","childResultsKeys","injectChildResultsIntoParent","$registerAs","childScope","$stopPropagation","push","removeChildResultsFromParent","childKey","__vuelidateInjectInstances","__vuelidateRemoveInstances","sendValidationResultsToParent","removeValidationResultsFromParent","ComputedProxyFactory","target","Proxy","prop","uid","useVuelidate","_getCurrentInstance","currentVueInstance","proxy","componentOptions","$options","validationResults","vuelidateExternalResults","validationsConfig","validationsWatchTarget","newValidationRules","isObject","Array","isArray","normalizeValidatorObject","validator","unwrapValidatorResponse","unwrapNormalizedValidator","withParams","Error","validatorObj","withMessage","withAsync","validators","collection","_len","others","_key","previous","collectionItem","collectionEntryResult","innerValidators","propertyResult","currentValidator","validatorFunction","$data","_ref3","context","a","b","req","isNaN","getTime","_","String","len","regex","expr","reg","test","common","freeze","__proto__","unwrap","emailRegex","required$1","trim","required","type","urlRegex","minValue$1","min","minValue","maxValue$1","max","maxValue","integer$1","integer","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_defineComponent","__name","props","settingId","settingUIData","initValue","setup","__props","newSettingValue","ref","computed","localRules","helpers","v$","reactive","DataExchange","url","isSaved","watch","posting","currPosting","prevPosting","postingFailed","needMessageSaved","async","sendConfig","isFormCorrect","post","setDefault","currSaved","setTimeout","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","for","_toDisplayString","_unref","_withDirectives","$event","autocomplete","id","placeholder","disabled","onKeyup","_withKeys","onBlur","_vModelText","onClick","_createCommentVNode","_Fragment","_renderList","__exports__","Boolean","onChange","_vModelCheckbox","configParent","setupDataService","available","_createBlock","BisConfigNumSetting","BisConfigBoolSetting","BisConfigVue"],"mappings":"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","file":"js/settings.a98681bd.js","sourcesContent":["/** В этом файле размещены константы, типы/интерфейсы и словари, относящиеся\n * к компоненту BisConfig.vue, который отвечает за конфигурацию контроля Комплект на сервере */\n\n/** Наименования численных настроек в конфиге Комплект.\n * Аналогичны тем, что приходят с сервера, только в camelCase */\nconst BisConfigSettingNameNumeric = [\n  \"signalCompletenessPercent\",\n  \"signalStoringTime\",\n  \"stationReceivingThreshold\",\n  \"stationReceivingErrorThreshold\",\n  \"stationVisibilityThreshold\",\n  \"residualPairsDifferenceThreshold\",\n  \"residualAverageDifferenceThreshold\",\n  \"ephemeridesControlThreshold\",\n  \"digitalInfoTransmittingDelayThreshold\",\n  \"minElevationForNavSolution\",\n  \"signalValidityPercent\",\n  \"signalValidityAnalyzingTime\",\n  \"stationValidityThreshold\",\n  \"stationValidityErrorThreshold\",\n] as const;\n\n/** Наименования булевых настроек (чекбоксов) в конфиге Комплект.\n * Аналогичны тем, что приходят с сервера, только в camelCase */\nconst BisConfigSettingNameBoolean = [\n  \"useSingleFreqNka\",\n  \"checkPacketReceiveTime\",\n  \"checkDiReceiveInTime\",\n] as const;\n\n/** Наименования ВСЕХ настроек в конфиге Комплект */\nconst BisConfigSettingName = [\n  ...BisConfigSettingNameNumeric,\n  ...BisConfigSettingNameBoolean,\n] as const;\n\n// ======================Типы=================================\n/** Тип для конфигурации контроля Комплект (для численных настроек) */\ntype BisControlConfigNumeric = {\n  [K in typeof BisConfigSettingNameNumeric[number]]?: number;\n};\n\n/** Тип для конфигурации контроля Комплект (для булевых настроек) */\ntype BisControlConfigBoolean = {\n  [K in typeof BisConfigSettingNameBoolean[number]]?: boolean;\n};\n\n/** Тип для конфигурации контроля Комплект (для ВСЕХ (численные + булевые) настроек) */\ntype BisControlConfig = BisControlConfigNumeric & BisControlConfigBoolean;\n\n/** Тип параметров, необходимых для отрисовки одной настройки для конфигурации Комплект в шаблоне */\ninterface BisControlConfigUIItem {\n  label: string;\n  defaultValue: number;\n  minRangeValue: number;\n  maxRangeValue?: number;\n}\n\n/** Тип параметров, необходимых для отрисовки всех настроек для конфигурации Комплект в шаблоне */\ninterface BisControlConfigUI {\n  num: { [K in typeof BisConfigSettingNameNumeric[number]]: BisControlConfigUIItem };\n  bool: { [K in typeof BisConfigSettingNameBoolean[number]]: BisControlConfigUIItem };\n}\n\n// ======================Словари===============================\n/** Параметры для отрисовки настроек для конфигурации Комплект в шаблоне */\nconst BisControlConfigUI: BisControlConfigUI = {\n  num: {\n    signalStoringTime: {\n      label: \"Глубина буфера сигналов для определения состояния приема [сек]\",\n      defaultValue: 10,\n      minRangeValue: 1,\n      maxRangeValue: 30,\n    },\n    signalCompletenessPercent: {\n      label: 'Порог для определения состояния \"Сбой\" [%]',\n      defaultValue: 90,\n      minRangeValue: 1,\n      maxRangeValue: 100,\n    },\n    stationVisibilityThreshold: {\n      label: 'Кол-во станций для определения обобщенного состояния приема сигнала \"Не определено\"',\n      defaultValue: 1,\n      minRangeValue: 1,\n    },\n    stationReceivingThreshold: {\n      label: 'Кол-во станций для определения обобщенного состояния приема сигнала \"Прием\"',\n      defaultValue: 1,\n      minRangeValue: 1,\n    },\n    stationReceivingErrorThreshold: {\n      label: 'Кол-во станций для определения обобщенного состояния приема сигнала \"Сбой\"',\n      defaultValue: 1,\n      minRangeValue: 1,\n    },\n    residualPairsDifferenceThreshold: {\n      label: \"Порог для парных разностей невязок [м]\",\n      defaultValue: 5,\n      minRangeValue: 0,\n    },\n    residualAverageDifferenceThreshold: {\n      label: \"Порог для разности невязки и средней невязки [м]\",\n      defaultValue: 10,\n      minRangeValue: 0,\n    },\n    ephemeridesControlThreshold: {\n      label: \"Порог для согласованности ЭИ на границе двух интервалов tb [м]\",\n      defaultValue: 2,\n      minRangeValue: 0,\n    },\n    digitalInfoTransmittingDelayThreshold: {\n      label: \"Порог для своевременности приема ЦИ [с]\",\n      defaultValue: 10,\n      minRangeValue: 0,\n    },\n    minElevationForNavSolution: {\n      label: \"Порог для вынесения решения об использовании невязок в решении НВЗ [угл. град]\",\n      defaultValue: 15,\n      minRangeValue: 0,\n    },\n    signalValidityPercent: {\n      label: \"Порог для определения годности сигнала [%]\",\n      defaultValue: 90,\n      minRangeValue: 1,\n      maxRangeValue: 100,\n    },\n    signalValidityAnalyzingTime: {\n      label: \"Глубина буфера сигналов для определения годности [сек]\",\n      defaultValue: 10,\n      minRangeValue: 1,\n      maxRangeValue: 30,\n    },\n    stationValidityThreshold: {\n      label: \"Кол-во станций для определения обобщенного состояния годности сигнала\",\n      defaultValue: 1,\n      minRangeValue: 1,\n    },\n    stationValidityErrorThreshold: {\n      label: \"Кол-во станций для определения обобщенного состояния негодности сигнала\",\n      defaultValue: 1,\n      minRangeValue: 1,\n    },\n  },\n  bool: {\n    useSingleFreqNka: {\n      label: \"Использовать одночастотные КА в решении НВЗ?\",\n      defaultValue: 0,\n      minRangeValue: 0,\n      maxRangeValue: 1,\n    },\n    checkPacketReceiveTime: {\n      label: \"Отбрасывать пакеты с запаздыванием более 10 секунд из обработки?\",\n      defaultValue: 0,\n      minRangeValue: 0,\n      maxRangeValue: 1,\n    },\n    checkDiReceiveInTime: {\n      label: \"Использовать ЦИ, запаздывание которой превышает порог для своевременности приема ЦИ?\",\n      defaultValue: 0,\n      minRangeValue: 0,\n      maxRangeValue: 1,\n    },\n  },\n} as const;\n\nexport {\n  BisConfigSettingNameNumeric,\n  BisConfigSettingNameBoolean,\n  BisConfigSettingName,\n  BisControlConfigNumeric,\n  BisControlConfigBoolean,\n  BisControlConfig,\n  BisControlConfigUIItem,\n  BisControlConfigUI,\n};\n","import { isReactive, isReadonly, computed, unref, ref, watch, reactive, isRef, nextTick, inject, provide, getCurrentInstance, onBeforeMount, onBeforeUnmount } from 'vue-demi';\n\nfunction unwrapObj(obj) {\n  let ignoreKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return Object.keys(obj).reduce((o, k) => {\n    if (ignoreKeys.includes(k)) return o;\n    o[k] = unref(obj[k]);\n    return o;\n  }, {});\n}\nfunction isFunction(val) {\n  return typeof val === 'function';\n}\nfunction isProxy(value) {\n  return isReactive(value) || isReadonly(value);\n}\nfunction get(obj, stringPath, def) {\n  // Cache the current object\n  let current = obj;\n  const path = stringPath.split('.'); // For each item in the path, dig into the object\n\n  for (let i = 0; i < path.length; i++) {\n    // If the item isn't found, return the default (or null)\n    if (!current[path[i]]) return def; // Otherwise, update the current  value\n\n    current = current[path[i]];\n  }\n\n  return current;\n}\nfunction gatherBooleanGroupProperties(group, nestedResults, property) {\n  return computed(() => {\n    return group.some(path => {\n      return get(nestedResults, path, {\n        [property]: false\n      })[property];\n    });\n  });\n}\nfunction gatherArrayGroupProperties(group, nestedResults, property) {\n  return computed(() => {\n    return group.reduce((all, path) => {\n      const fetchedProperty = get(nestedResults, path, {\n        [property]: false\n      })[property] || [];\n      return all.concat(fetchedProperty);\n    }, []);\n  });\n}\n\n/**\n * Response form a raw Validator function.\n * Should return a Boolean or an object with $invalid property.\n * @typedef {Boolean | { $valid: Boolean }} ValidatorResponse\n */\n\n/**\n * Calls a validation rule by unwrapping its value first from a ref.\n * @param {Validator} rule\n * @param {Ref} value\n * @param {VueInstance} instance\n * @param {Object} siblingState\n * @return {Promise<ValidatorResponse> | ValidatorResponse}\n */\n\nfunction callRule(rule, value, siblingState, instance) {\n  return rule.call(instance, unref(value), unref(siblingState), instance);\n}\n/**\n * Normalizes the validator result\n * Allows passing a boolean of an object like `{ $valid: Boolean }`\n * @param {ValidatorResponse} result - Validator result\n * @return {boolean}\n */\n\n\nfunction normalizeValidatorResponse(result) {\n  return result.$valid !== undefined ? !result.$valid : !result;\n}\n/**\n * Returns the result of an async validator.\n * @param {Validator} rule\n * @param {Ref<*>} model\n * @param {Ref<Boolean>} $pending\n * @param {Ref<Boolean>} $dirty\n * @param {GlobalConfig} config\n * @param {boolean} config.$lazy\n * @param {Ref<*>} $response\n * @param {VueInstance} instance\n * @param {Ref<*>[]} watchTargets\n * @param {Object} siblingState\n * @param {Ref<Boolean>} $lastInvalidState\n * @param {Ref<Number>} $lastCommittedOn\n * @return {{ $invalid: Ref<Boolean>, $unwatch: WatchStopHandle }}\n */\n\n\nfunction createAsyncResult(rule, model, $pending, $dirty, _ref, $response, instance) {\n  let {\n    $lazy,\n    $rewardEarly\n  } = _ref;\n  let watchTargets = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : [];\n  let siblingState = arguments.length > 8 ? arguments[8] : undefined;\n  let $lastInvalidState = arguments.length > 9 ? arguments[9] : undefined;\n  let $lastCommittedOn = arguments.length > 10 ? arguments[10] : undefined;\n  const $invalid = ref(!!$dirty.value);\n  const $pendingCounter = ref(0);\n  $pending.value = false;\n  const $unwatch = watch([model, $dirty].concat(watchTargets, $lastCommittedOn), () => {\n    if ( // if $lazy and not dirty, return\n    $lazy && !$dirty.value || // if in $rewardEarly mode and no previous errors, nothing pending, return\n    $rewardEarly && !$lastInvalidState.value && !$pending.value) {\n      return;\n    }\n\n    let ruleResult; // make sure we dont break if a validator throws\n\n    try {\n      ruleResult = callRule(rule, model, siblingState, instance);\n    } catch (err) {\n      // convert to a promise, so we can handle it async\n      ruleResult = Promise.reject(err);\n    }\n\n    $pendingCounter.value++;\n    $pending.value = !!$pendingCounter.value; // ensure $invalid is false, while validator is resolving\n\n    $invalid.value = false;\n    Promise.resolve(ruleResult).then(data => {\n      $pendingCounter.value--;\n      $pending.value = !!$pendingCounter.value;\n      $response.value = data;\n      $invalid.value = normalizeValidatorResponse(data);\n    }).catch(error => {\n      $pendingCounter.value--;\n      $pending.value = !!$pendingCounter.value;\n      $response.value = error;\n      $invalid.value = true;\n    });\n  }, {\n    immediate: true,\n    deep: typeof model === 'object'\n  });\n  return {\n    $invalid,\n    $unwatch\n  };\n}\n/**\n * Returns the result of a sync validator\n * @param {Validator} rule\n * @param {Ref<*>} model\n * @param {Ref<Boolean>} $dirty\n * @param {GlobalConfig} config\n * @param {Boolean} config.$lazy\n * @param {Ref<*>} $response\n * @param {VueInstance} instance\n * @param {Object} siblingState\n * @param {Ref<Boolean>} $lastInvalidState\n * @return {{$unwatch: (function(): {}), $invalid: ComputedRef<boolean>}}\n */\n\n\nfunction createSyncResult(rule, model, $dirty, _ref2, $response, instance, siblingState, $lastInvalidState) {\n  let {\n    $lazy,\n    $rewardEarly\n  } = _ref2;\n\n  const $unwatch = () => ({});\n\n  const $invalid = computed(() => {\n    if ( // return early if $lazy mode and not touched\n    $lazy && !$dirty.value || // If $rewardEarly mode is ON and last invalid was false (no error), return it.\n    // If we want to invalidate, we just flip the last state to true, causing the computed to run again\n    $rewardEarly && !$lastInvalidState.value) {\n      return false;\n    }\n\n    let returnValue = true;\n\n    try {\n      const result = callRule(rule, model, siblingState, instance);\n      $response.value = result;\n      returnValue = normalizeValidatorResponse(result);\n    } catch (err) {\n      $response.value = err;\n    }\n\n    return returnValue;\n  });\n  return {\n    $unwatch,\n    $invalid\n  };\n}\n/**\n * Returns the validation result.\n * Detects async and sync validators.\n * @param {NormalizedValidator} rule\n * @param {Ref<*>} model\n * @param {Ref<boolean>} $dirty\n * @param {GlobalConfig} config - Vuelidate config\n * @param {VueInstance} instance - component instance\n * @param {string} validatorName - name of the current validator\n * @param {string} propertyKey - the current property we are validating\n * @param {string} propertyPath - the deep path to the validated property\n * @param {Object} siblingState\n * @param {Ref<Boolean>} $lastInvalidState - the last invalid state\n * @param {Ref<Number>} $lastCommittedOn - the last time $commit was called\n * @return {{ $params: *, $message: Ref<String>, $pending: Ref<Boolean>, $invalid: Ref<Boolean>, $response: Ref<*>, $unwatch: WatchStopHandle }}\n */\n\n\nfunction createValidatorResult(rule, model, $dirty, config, instance, validatorName, propertyKey, propertyPath, siblingState, $lastInvalidState, $lastCommittedOn) {\n  const $pending = ref(false);\n  const $params = rule.$params || {};\n  const $response = ref(null);\n  let $invalid;\n  let $unwatch;\n\n  if (rule.$async) {\n    ({\n      $invalid,\n      $unwatch\n    } = createAsyncResult(rule.$validator, model, $pending, $dirty, config, $response, instance, rule.$watchTargets, siblingState, $lastInvalidState, $lastCommittedOn));\n  } else {\n    ({\n      $invalid,\n      $unwatch\n    } = createSyncResult(rule.$validator, model, $dirty, config, $response, instance, siblingState, $lastInvalidState));\n  }\n\n  const message = rule.$message;\n  const $message = isFunction(message) ? computed(() => message(unwrapObj({\n    $pending,\n    $invalid,\n    $params: unwrapObj($params),\n    // $params can hold refs, so we unwrap them for easy access\n    $model: model,\n    $response,\n    $validator: validatorName,\n    $propertyPath: propertyPath,\n    $property: propertyKey\n  }))) : message || '';\n  return {\n    $message,\n    $params,\n    $pending,\n    $invalid,\n    $response,\n    $unwatch\n  };\n}\n\n/**\n * Sorts a validation definition into rules, configs and nested validators.\n * @param {Object<NormalizedValidator|Function>} validationsRaw\n * @return {{ rules: Object<NormalizedValidator>, nestedValidators: Object, config: GlobalConfig }}\n */\n\nfunction sortValidations() {\n  let validationsRaw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const validations = unref(validationsRaw);\n  const validationKeys = Object.keys(validations);\n  const rules = {};\n  const nestedValidators = {};\n  const config = {};\n  let validationGroups = null;\n  validationKeys.forEach(key => {\n    const v = validations[key];\n\n    switch (true) {\n      // If it is already normalized, use it\n      case isFunction(v.$validator):\n        rules[key] = v;\n        break;\n      // If it is just a function, normalize it first\n      // into { $validator: <Fun> }\n\n      case isFunction(v):\n        rules[key] = {\n          $validator: v\n        };\n        break;\n\n      case key === '$validationGroups':\n        validationGroups = v;\n        break;\n      // Catch $-prefixed properties as config\n\n      case key.startsWith('$'):\n        config[key] = v;\n        break;\n      // If it doesn’t match any of the above,\n      // treat as nestedValidators state property\n\n      default:\n        nestedValidators[key] = v;\n    }\n  });\n  return {\n    rules,\n    nestedValidators,\n    config,\n    validationGroups\n  };\n}\n\nfunction _empty() {}\n\nconst ROOT_PATH = '__root';\n/** @typedef {import('vue-demi').ComponentPublicInstance} VueInstance */\n\n/** @typedef {import('vue-demi').ComputedRef} ComputedRef */\n\n/** @typedef {import('vue-demi').UnwrapRef} UnwrapRef */\n\n/** @typedef {import('vue-demi').WatchStopHandle} WatchStopHandle */\n\n/** @typedef {import('vue-demi').WritableComputedRef} WritableComputedRef */\n\n/** @typedef {import('vue-demi').UnwrapNestedRefs} UnwrapNestedRefs */\n\n/**\n * @typedef NormalizedValidator\n * @property {Validator} $validator\n * @property {String | Ref<String> | function(*): string} [$message]\n * @property {Object | Ref<Object>} [$params]\n * @property {Object | Ref<Object>} [$async]\n * @property {Ref<*>[]} [$watchTargets]\n */\n\n/**\n * Raw validator function, before being normalized\n * Can return a Promise or a {@see ValidatorResponse}\n * @typedef {function(*): ((Promise<ValidatorResponse> | ValidatorResponse))} Validator\n */\n\n/**\n * @typedef ErrorObject\n * @property {Ref<String>} $message - Reactive error message\n * @property {Ref<Object>} $params - Params passed from withParams\n * @property {Ref<Boolean>} $pending - If validation is pending\n * @property {String} $property - State key\n * @property {String} $propertyPath - Dot notation path to state\n * @property {String} $validator - Validator name\n * @property {String} $uid - Unique identifier\n */\n\n/**\n * @typedef ValidationResult\n * @property {Ref<Boolean>} $pending\n * @property {Ref<Boolean>} $dirty\n * @property {Ref<Boolean>} $invalid\n * @property {Ref<Boolean>} $error\n * @property {Ref<String>} $path\n * @property {Function} $touch\n * @property {Function} $reset\n * @property {ComputedRef<ErrorObject[]>} $errors\n * @property {ComputedRef<ErrorObject[]>} $silentErrors\n * @property {Function} $commit\n */\n\n/**\n * Creates the main Validation Results object for a state tree\n * Walks the tree's top level branches\n * @param {Object<NormalizedValidator>} rules - Rules for the current state tree\n * @param {Object} model - Current state value\n * @param {String} key - Key for the current state tree\n * @param {ResultsStorage} [resultsCache] - A cache map of all the validators\n * @param {String} [path] - the current property path\n * @param {GlobalConfig} [config] - the config object\n * @param {VueInstance} instance\n * @param {ComputedRef<Object>} externalResults\n * @param {Object} siblingState\n * @return {ValidationResult | {}}\n */\n\nfunction _call(body, then, direct) {\n  if (direct) {\n    return then ? then(body()) : body();\n  }\n\n  try {\n    var result = Promise.resolve(body());\n    return then ? result.then(then) : result;\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n/**\n * Collects the validation results of all nested state properties\n * @param {Object<NormalizedValidator|Function>} validations - The validation\n * @param {Object} nestedState - Current state\n * @param {String} path - Path to current property\n * @param {ResultsStorage} resultsCache - Validations cache map\n * @param {GlobalConfig} config - The config object\n * @param {VueInstance} instance - The current Vue instance\n * @param {ComputedRef<object>} nestedExternalResults - The external results for this nested collection\n * @return {Object<string, VuelidateState>}\n */\n\n\nfunction _callIgnored(body, direct) {\n  return _call(body, _empty, direct);\n}\n\nfunction _invoke(body, then) {\n  var result = body();\n\n  if (result && result.then) {\n    return result.then(then);\n  }\n\n  return then(result);\n}\n\nfunction _async(f) {\n  return function () {\n    for (var args = [], i = 0; i < arguments.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    try {\n      return Promise.resolve(f.apply(this, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n}\n\nfunction createValidationResults(rules, model, key, resultsCache, path, config, instance, externalResults, siblingState) {\n  // collect the property keys\n  const ruleKeys = Object.keys(rules);\n  const cachedResult = resultsCache.get(path, rules);\n  const $dirty = ref(false); // state for the $rewardEarly option\n\n  /** The last invalid state of this property */\n\n  const $lastInvalidState = ref(false);\n  /** The last time $commit was called. Used to re-trigger async calls */\n\n  const $lastCommittedOn = ref(0);\n\n  if (cachedResult) {\n    // if the rules are the same as before, use the cached results\n    if (!cachedResult.$partial) return cachedResult; // remove old watchers\n\n    cachedResult.$unwatch(); // use the `$dirty.value`, so we dont save references by accident\n\n    $dirty.value = cachedResult.$dirty.value;\n  }\n\n  const result = {\n    // restore $dirty from cache\n    $dirty,\n    $path: path,\n    $touch: () => {\n      if (!$dirty.value) $dirty.value = true;\n    },\n    $reset: () => {\n      if ($dirty.value) $dirty.value = false;\n    },\n    $commit: () => {}\n  };\n  /**\n   * If there are no validation rules, it is most likely\n   * a top level state, aka root\n   */\n\n  if (!ruleKeys.length) {\n    // if there are cached results, we should overwrite them with the new ones\n    cachedResult && resultsCache.set(path, rules, result);\n    return result;\n  }\n\n  ruleKeys.forEach(ruleKey => {\n    result[ruleKey] = createValidatorResult(rules[ruleKey], model, result.$dirty, config, instance, ruleKey, key, path, siblingState, $lastInvalidState, $lastCommittedOn);\n  });\n  result.$externalResults = computed(() => {\n    if (!externalResults.value) return [];\n    return [].concat(externalResults.value).map((stringError, index) => ({\n      $propertyPath: path,\n      $property: key,\n      $validator: '$externalResults',\n      $uid: `${path}-externalResult-${index}`,\n      $message: stringError,\n      $params: {},\n      $response: null,\n      $pending: false\n    }));\n  });\n  result.$invalid = computed(() => {\n    const r = ruleKeys.some(ruleKey => unref(result[ruleKey].$invalid)); // cache the last invalid state\n\n    $lastInvalidState.value = r;\n    return !!result.$externalResults.value.length || r;\n  });\n  result.$pending = computed(() => ruleKeys.some(ruleKey => unref(result[ruleKey].$pending)));\n  result.$error = computed(() => result.$dirty.value ? result.$pending.value || result.$invalid.value : false);\n  result.$silentErrors = computed(() => ruleKeys.filter(ruleKey => unref(result[ruleKey].$invalid)).map(ruleKey => {\n    const res = result[ruleKey];\n    return reactive({\n      $propertyPath: path,\n      $property: key,\n      $validator: ruleKey,\n      $uid: `${path}-${ruleKey}`,\n      $message: res.$message,\n      $params: res.$params,\n      $response: res.$response,\n      $pending: res.$pending\n    });\n  }).concat(result.$externalResults.value));\n  result.$errors = computed(() => result.$dirty.value ? result.$silentErrors.value : []);\n\n  result.$unwatch = () => ruleKeys.forEach(ruleKey => {\n    result[ruleKey].$unwatch();\n  });\n\n  result.$commit = () => {\n    $lastInvalidState.value = true;\n    $lastCommittedOn.value = Date.now();\n  };\n\n  resultsCache.set(path, rules, result);\n  return result;\n}\n\nfunction collectNestedValidationResults(validations, nestedState, path, resultsCache, config, instance, nestedExternalResults) {\n  const nestedValidationKeys = Object.keys(validations); // if we have no state, return empty object\n\n  if (!nestedValidationKeys.length) return {};\n  return nestedValidationKeys.reduce((results, nestedKey) => {\n    // build validation results for nested state\n    results[nestedKey] = setValidations({\n      validations: validations[nestedKey],\n      state: nestedState,\n      key: nestedKey,\n      parentKey: path,\n      resultsCache,\n      globalConfig: config,\n      instance,\n      externalResults: nestedExternalResults\n    });\n    return results;\n  }, {});\n}\n/**\n * Generates the Meta fields from the results\n * @param {ValidationResult|{}} results\n * @param {Object.<string, VuelidateState>} nestedResults\n * @param {Object.<string, ValidationResult>} childResults\n * @return {{$anyDirty: Ref<Boolean>, $error: Ref<Boolean>, $invalid: Ref<Boolean>, $errors: Ref<ErrorObject[]>, $dirty: Ref<Boolean>, $touch: Function, $reset: Function }}\n */\n\n\nfunction createMetaFields(results, nestedResults, childResults) {\n  const allResults = computed(() => [nestedResults, childResults].filter(res => res).reduce((allRes, res) => {\n    return allRes.concat(Object.values(unref(res)));\n  }, [])); // returns `$dirty` as true, if all children are dirty\n\n  const $dirty = computed({\n    get() {\n      return results.$dirty.value || (allResults.value.length ? allResults.value.every(r => r.$dirty) : false);\n    },\n\n    set(v) {\n      results.$dirty.value = v;\n    }\n\n  });\n  const $silentErrors = computed(() => {\n    // current state level errors, fallback to empty array if root\n    const modelErrors = unref(results.$silentErrors) || []; // collect all nested and child $silentErrors\n\n    const nestedErrors = allResults.value.filter(result => (unref(result).$silentErrors || []).length).reduce((errors, result) => {\n      return errors.concat(...result.$silentErrors);\n    }, []); // merge the $silentErrors\n\n    return modelErrors.concat(nestedErrors);\n  });\n  const $errors = computed(() => {\n    // current state level errors, fallback to empty array if root\n    const modelErrors = unref(results.$errors) || []; // collect all nested and child $errors\n\n    const nestedErrors = allResults.value.filter(result => (unref(result).$errors || []).length).reduce((errors, result) => {\n      return errors.concat(...result.$errors);\n    }, []); // merge the $errors\n\n    return modelErrors.concat(nestedErrors);\n  });\n  const $invalid = computed(() => // if any of the nested values is invalid\n  allResults.value.some(r => r.$invalid) || // or if the current state is invalid\n  unref(results.$invalid) || // fallback to false if is root\n  false);\n  const $pending = computed(() => // if any of the nested values is pending\n  allResults.value.some(r => unref(r.$pending)) || // if any of the current state validators is pending\n  unref(results.$pending) || // fallback to false if is root\n  false);\n  const $anyDirty = computed(() => allResults.value.some(r => r.$dirty) || allResults.value.some(r => r.$anyDirty) || $dirty.value);\n  const $error = computed(() => $dirty.value ? $pending.value || $invalid.value : false);\n\n  const $touch = () => {\n    // call the root $touch\n    results.$touch(); // call all nested level $touch\n\n    allResults.value.forEach(result => {\n      result.$touch();\n    });\n  };\n\n  const $commit = () => {\n    // call the root $touch\n    results.$commit(); // call all nested level $touch\n\n    allResults.value.forEach(result => {\n      result.$commit();\n    });\n  };\n\n  const $reset = () => {\n    // reset the root $dirty state\n    results.$reset(); // reset all the children $dirty states\n\n    allResults.value.forEach(result => {\n      result.$reset();\n    });\n  }; // Ensure that if all child and nested results are $dirty, this also becomes $dirty\n\n\n  if (allResults.value.length && allResults.value.every(nr => nr.$dirty)) $touch();\n  return {\n    $dirty,\n    $errors,\n    $invalid,\n    $anyDirty,\n    $error,\n    $pending,\n    $touch,\n    $reset,\n    $silentErrors,\n    $commit\n  };\n}\n/**\n * @typedef VuelidateState\n * @property {WritableComputedRef<any>} $model\n * @property {ComputedRef<Boolean>} $dirty\n * @property {ComputedRef<Boolean>} $error\n * @property {ComputedRef<ErrorObject[]>} $errors\n * @property {ComputedRef<Boolean>} $invalid\n * @property {ComputedRef<Boolean>} $anyDirty\n * @property {ComputedRef<Boolean>} $pending\n * @property {Function} $touch\n * @property {Function} $reset\n * @property {String} $path\n * @property {ComputedRef<ErrorObject[]>} $silentErrors\n * @property {Function} [$validate]\n * @property {Function} [$getResultsForChild]\n * @property {Object.<string, VuelidateState>}\n */\n\n/**\n * Main Vuelidate bootstrap function.\n * Used both for Composition API in `setup` and for Global App usage.\n * Used to collect validation state, when walking recursively down the state tree\n * @param {Object} params\n * @param {Object<NormalizedValidator|Function>} params.validations\n * @param {Object} params.state\n * @param {String} [params.key] - Current state property key. Used when being called on nested items\n * @param {String} [params.parentKey] - Parent state property key. Used when being called recursively\n * @param {Object<string, ValidationResult>} [params.childResults] - Used to collect child results.\n * @param {ResultsStorage} params.resultsCache - The cached validation results\n * @param {VueInstance} params.instance - The current Vue instance\n * @param {GlobalConfig} params.globalConfig - The validation config, passed to this setValidations instance.\n * @param {UnwrapNestedRefs<object> | Ref<Object>} params.externalResults - External validation results\n * @return {UnwrapNestedRefs<VuelidateState>}\n */\n\n\nfunction setValidations(_ref) {\n  /**\n   * Executes the validators and returns the result.\n   * @return {Promise<boolean>}\n   */\n  const $validate = _async(function () {\n    $touch();\n    return _invoke(function () {\n      if (mergedConfig.$rewardEarly) {\n        $commit(); // await the watchers\n\n        return _callIgnored(nextTick);\n      }\n    }, function () {\n      // await the watchers\n      return _call(nextTick, function () {\n        return new Promise(resolve => {\n          // return whether it is valid or not\n          if (!$pending.value) return resolve(!$invalid.value);\n          const unwatch = watch($pending, () => {\n            resolve(!$invalid.value);\n            unwatch();\n          });\n        });\n      });\n    });\n  });\n  /**\n   * Returns a child component's results, based on registration name\n   * @param {string} key\n   * @return {VuelidateState}\n   */\n\n\n  let {\n    validations,\n    state,\n    key,\n    parentKey,\n    childResults,\n    resultsCache,\n    globalConfig = {},\n    instance,\n    externalResults\n  } = _ref;\n  const path = parentKey ? `${parentKey}.${key}` : key; // Sort out the validation object into:\n  // – rules = validators for current state tree fragment\n  // — nestedValidators = nested state fragments keys that might contain more validators\n  // – config = configuration properties that affect this state fragment\n\n  const {\n    rules,\n    nestedValidators,\n    config,\n    validationGroups\n  } = sortValidations(validations);\n  const mergedConfig = Object.assign({}, globalConfig, config); // create protected state for cases when the state branch does not exist yet.\n  // This protects when using the OptionsAPI as the data is bound after the setup method\n\n  const nestedState = key ? computed(() => {\n    const s = unref(state);\n    return s ? unref(s[key]) : undefined;\n  }) : state; // cache the external results, so we can revert back to them\n\n  const cachedExternalResults = Object.assign({}, unref(externalResults) || {});\n  const nestedExternalResults = computed(() => {\n    const results = unref(externalResults);\n    if (!key) return results;\n    return results ? unref(results[key]) : undefined;\n  }); // Use rules for the current state fragment and validate it\n\n  const results = createValidationResults(rules, nestedState, key, resultsCache, path, mergedConfig, instance, nestedExternalResults, state); // Use nested keys to repeat the process\n  // *WARN*: This is recursive\n\n  const nestedResults = collectNestedValidationResults(nestedValidators, nestedState, path, resultsCache, mergedConfig, instance, nestedExternalResults);\n  const $validationGroups = {};\n\n  if (validationGroups) {\n    Object.entries(validationGroups).forEach(_ref2 => {\n      let [key, group] = _ref2;\n      $validationGroups[key] = {\n        $invalid: gatherBooleanGroupProperties(group, nestedResults, '$invalid'),\n        $error: gatherBooleanGroupProperties(group, nestedResults, '$error'),\n        $pending: gatherBooleanGroupProperties(group, nestedResults, '$pending'),\n        $errors: gatherArrayGroupProperties(group, nestedResults, '$errors'),\n        $silentErrors: gatherArrayGroupProperties(group, nestedResults, '$silentErrors')\n      };\n    });\n  } // Collect and merge this level validation results\n  // with all nested validation results\n\n\n  const {\n    $dirty,\n    $errors,\n    $invalid,\n    $anyDirty,\n    $error,\n    $pending,\n    $touch,\n    $reset,\n    $silentErrors,\n    $commit\n  } = createMetaFields(results, nestedResults, childResults);\n  /**\n   * If we have no `key`, this is the top level state\n   * We dont need `$model` there.\n   */\n\n  const $model = key ? computed({\n    get: () => unref(nestedState),\n    set: val => {\n      $dirty.value = true;\n      const s = unref(state);\n      const external = unref(externalResults);\n\n      if (external) {\n        external[key] = cachedExternalResults[key];\n      }\n\n      if (isRef(s[key])) {\n        s[key].value = val;\n      } else {\n        s[key] = val;\n      }\n    }\n  }) : null;\n\n  if (key && mergedConfig.$autoDirty) {\n    watch(nestedState, () => {\n      if (!$dirty.value) $touch();\n      const external = unref(externalResults);\n\n      if (external) {\n        external[key] = cachedExternalResults[key];\n      }\n    }, {\n      flush: 'sync'\n    });\n  }\n\n  function $getResultsForChild(key) {\n    return (childResults.value || {})[key];\n  }\n\n  function $clearExternalResults() {\n    if (isRef(externalResults)) {\n      externalResults.value = cachedExternalResults;\n    } else {\n      // if the external results state was empty, we need to delete every property, one by one\n      if (Object.keys(cachedExternalResults).length === 0) {\n        Object.keys(externalResults).forEach(k => {\n          delete externalResults[k];\n        });\n      } else {\n        // state was not empty, so we just assign it back into the current state\n        Object.assign(externalResults, cachedExternalResults);\n      }\n    }\n  }\n\n  return reactive(Object.assign({}, results, {\n    // NOTE: The order here is very important, since we want to override\n    // some of the *results* meta fields with the collective version of it\n    // that includes the results of nested state validation results\n    $model,\n    $dirty,\n    $error,\n    $errors,\n    $invalid,\n    $anyDirty,\n    $pending,\n    $touch,\n    $reset,\n    $path: path || ROOT_PATH,\n    $silentErrors,\n    $validate,\n    $commit\n  }, childResults && {\n    $getResultsForChild,\n    $clearExternalResults,\n    $validationGroups\n  }, nestedResults));\n}\n\nclass ResultsStorage {\n  constructor() {\n    this.storage = new Map();\n  }\n  /**\n   * Stores a validation result, and its rules by its path\n   * @param {String} path\n   * @param {Object<NormalizedValidator>} rules\n   * @param {ValidationResult} result\n   */\n\n\n  set(path, rules, result) {\n    this.storage.set(path, {\n      rules,\n      result\n    });\n  }\n  /**\n   * Check if the stored `results` for the provided `path` have the same `rules` compared to 'storedRules'\n   * @param {String} path\n   * @param {Object<NormalizedValidator>} rules\n   * @param {Object<NormalizedValidator>} storedRules\n   * @return {Boolean}\n   */\n\n\n  checkRulesValidity(path, rules, storedRules) {\n    const storedRulesKeys = Object.keys(storedRules);\n    const newRulesKeys = Object.keys(rules);\n    if (newRulesKeys.length !== storedRulesKeys.length) return false;\n    const hasAllValidators = newRulesKeys.every(ruleKey => storedRulesKeys.includes(ruleKey));\n    if (!hasAllValidators) return false;\n    return newRulesKeys.every(ruleKey => {\n      if (!rules[ruleKey].$params) return true;\n      return Object.keys(rules[ruleKey].$params).every(paramKey => {\n        // make sure to unwrap before comparing\n        return unref(storedRules[ruleKey].$params[paramKey]) === unref(rules[ruleKey].$params[paramKey]);\n      });\n    });\n  }\n  /**\n   * Returns the matched result if catche is valid\n   * @param {String} path\n   * @param {Object<NormalizedValidator>} rules\n   * @return {{$partial: boolean, $dirty: Ref<Boolean>, $unwatch: function}|undefined|ValidationResult}\n   */\n\n\n  get(path, rules) {\n    const storedRuleResultPair = this.storage.get(path);\n    if (!storedRuleResultPair) return undefined;\n    const {\n      rules: storedRules,\n      result\n    } = storedRuleResultPair;\n    const isValidCache = this.checkRulesValidity(path, rules, storedRules);\n    const $unwatch = result.$unwatch ? result.$unwatch : () => ({});\n    if (!isValidCache) return {\n      $dirty: result.$dirty,\n      $partial: true,\n      $unwatch\n    };\n    return result;\n  }\n\n}\n\nconst CollectFlag = {\n  COLLECT_ALL: true,\n  COLLECT_NONE: false\n};\nconst VuelidateInjectChildResults = Symbol('vuelidate#injectChildResults');\nconst VuelidateRemoveChildResults = Symbol('vuelidate#removeChildResults');\n/**\n * Create helpers to collect validation state from child components\n * @param {Object} params\n * @param {String | Number | Boolean} params.$scope - Parent component scope\n * @return {{sendValidationResultsToParent: function[], childResults: ComputedRef<Object>, removeValidationResultsFromParent: function[]}}\n */\n\nfunction nestedValidations(_ref) {\n  let {\n    $scope,\n    instance\n  } = _ref;\n  const childResultsRaw = {};\n  const childResultsKeys = ref([]);\n  const childResults = computed(() => childResultsKeys.value.reduce((results, key) => {\n    results[key] = unref(childResultsRaw[key]);\n    return results;\n  }, {}));\n  /**\n   * Allows children to send validation data up to their parent.\n   * @param {Object} results - the results\n   * @param {Object} args\n   * @param {String} args.$registerAs - the $registeredAs key\n   * @param {String | Number | Boolean} args.$scope - the $scope key\n   */\n\n  function injectChildResultsIntoParent(results, _ref2) {\n    let {\n      $registerAs: key,\n      $scope: childScope,\n      $stopPropagation\n    } = _ref2;\n    if ($stopPropagation || $scope === CollectFlag.COLLECT_NONE || childScope === CollectFlag.COLLECT_NONE || $scope !== CollectFlag.COLLECT_ALL && $scope !== childScope) return;\n    childResultsRaw[key] = results;\n    childResultsKeys.value.push(key);\n  } // combine with other `injectChildResultsIntoParent` from vuelidate instances in this Vue component instance\n\n\n  instance.__vuelidateInjectInstances = [].concat(instance.__vuelidateInjectInstances || [], injectChildResultsIntoParent);\n  /**\n   * Allows children to remove the validation data from their parent, before getting destroyed.\n   * @param {String} key - the registeredAs key\n   */\n\n  function removeChildResultsFromParent(key) {\n    // remove the key\n    childResultsKeys.value = childResultsKeys.value.filter(childKey => childKey !== key); // remove the stored data for the key\n\n    delete childResultsRaw[key];\n  } // combine with other `removeChildResultsFromParent` from vuelidate instances in this Vue component instance\n\n\n  instance.__vuelidateRemoveInstances = [].concat(instance.__vuelidateRemoveInstances || [], removeChildResultsFromParent); // inject the `injectChildResultsIntoParent` method, into the current scope\n\n  const sendValidationResultsToParent = inject(VuelidateInjectChildResults, []); // provide to all of its children the send results to parent function\n\n  provide(VuelidateInjectChildResults, instance.__vuelidateInjectInstances);\n  const removeValidationResultsFromParent = inject(VuelidateRemoveChildResults, []); // provide to all of its children the remove results  function\n\n  provide(VuelidateRemoveChildResults, instance.__vuelidateRemoveInstances);\n  return {\n    childResults,\n    sendValidationResultsToParent,\n    removeValidationResultsFromParent\n  };\n}\n\n/**\n * Helper proxy for instance property access. It makes every reference\n * reactive for the validation function\n * @param target\n * @return {*|ComputedRef<*>}\n */\n\nfunction ComputedProxyFactory(target) {\n  return new Proxy(target, {\n    get(target, prop) {\n      return typeof target[prop] === 'object' ? ComputedProxyFactory(target[prop]) : computed(() => target[prop]);\n    }\n\n  });\n}\n\n/**\n * @typedef GlobalConfig\n * @property {String} [$registerAs] - Config Object\n * @property {String | Number | Symbol} [$scope] - A scope to limit child component registration\n * @property {Boolean} [$stopPropagation] - Tells a Vue component to stop sending its results up to the parent\n * @property {Ref<Object>} [$externalResults] - External error messages, like from server validation.\n * @property {Boolean} [$autoDirty] - Should the form watch for state changed, and automatically set `$dirty` to true.\n * @property {Boolean} [$lazy] - Should the validations be lazy, and run only after they are dirty\n * @property {Boolean} [$rewardEarly] - Once valid, re-runs property validators only on manual calls of $commit\n */\n\n/**\n * Composition API compatible Vuelidate\n * Use inside the `setup` lifecycle hook\n * @param {Object | GlobalConfig} [validations] - Validations Object or the globalConfig.\n * @param {Object} [state] - State object - required if `validations` is a validation object.\n * @param {GlobalConfig} [globalConfig] - Config Object\n * @return {ComputedRef<*>}\n */\n\nlet uid = 0;\nfunction useVuelidate(validations, state) {\n  var _getCurrentInstance;\n\n  let globalConfig = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  // if we pass only one argument, its most probably the globalConfig.\n  // This use case is so parents can just collect results of child forms.\n  if (arguments.length === 1) {\n    globalConfig = validations;\n    validations = undefined;\n    state = undefined;\n  }\n\n  let {\n    $registerAs,\n    $scope = CollectFlag.COLLECT_ALL,\n    $stopPropagation,\n    $externalResults,\n    currentVueInstance\n  } = globalConfig;\n  const instance = currentVueInstance || ((_getCurrentInstance = getCurrentInstance()) === null || _getCurrentInstance === void 0 ? void 0 : _getCurrentInstance.proxy);\n  const componentOptions = instance ? instance.$options : {}; // if there is no registration name, add one.\n\n  if (!$registerAs) {\n    uid += 1;\n    $registerAs = `_vuelidate_${uid}`;\n  }\n\n  const validationResults = ref({});\n  const resultsCache = new ResultsStorage();\n  const {\n    childResults,\n    sendValidationResultsToParent,\n    removeValidationResultsFromParent\n  } = instance ? nestedValidations({\n    $scope,\n    instance\n  }) : {\n    childResults: ref({})\n  }; // Options API\n\n  if (!validations && componentOptions.validations) {\n    const rules = componentOptions.validations;\n    state = ref({});\n    onBeforeMount(() => {\n      // Delay binding state to validations defined with the Options API until mounting, when the data\n      // has been attached to the component instance. From that point on it will be reactive.\n      state.value = instance;\n      watch(() => isFunction(rules) ? rules.call(state.value, new ComputedProxyFactory(state.value)) : rules, validations => {\n        validationResults.value = setValidations({\n          validations,\n          state,\n          childResults,\n          resultsCache,\n          globalConfig,\n          instance,\n          externalResults: $externalResults || instance.vuelidateExternalResults\n        });\n      }, {\n        immediate: true\n      });\n    });\n    globalConfig = componentOptions.validationsConfig || globalConfig;\n  } else {\n    const validationsWatchTarget = isRef(validations) || isProxy(validations) ? validations // wrap plain objects in a reactive, so we can track changes if they have computed in them.\n    : reactive(validations || {});\n    watch(validationsWatchTarget, newValidationRules => {\n      validationResults.value = setValidations({\n        validations: newValidationRules,\n        state,\n        childResults,\n        resultsCache,\n        globalConfig,\n        instance: instance !== null && instance !== void 0 ? instance : {},\n        externalResults: $externalResults\n      });\n    }, {\n      immediate: true\n    });\n  }\n\n  if (instance) {\n    // send all the data to the parent when the function is invoked inside setup.\n    sendValidationResultsToParent.forEach(f => f(validationResults, {\n      $registerAs,\n      $scope,\n      $stopPropagation\n    })); // before this component is destroyed, remove all the data from the parent.\n\n    onBeforeUnmount(() => removeValidationResultsFromParent.forEach(f => f($registerAs)));\n  }\n\n  return computed(() => {\n    return Object.assign({}, unref(validationResults.value), childResults.value);\n  });\n}\n\nexport { CollectFlag, useVuelidate as default, useVuelidate };\n","import { unref } from 'vue-demi';\n\nfunction isFunction(val) {\n  return typeof val === 'function';\n}\nfunction isObject(o) {\n  return o !== null && typeof o === 'object' && !Array.isArray(o);\n}\n/**\n * Returns a standard ValidatorObject\n * Wraps a plain function into a ValidatorObject\n * @param {NormalizedValidator|Function} validator\n * @return {NormalizedValidator}\n */\n\nfunction normalizeValidatorObject(validator) {\n  return isFunction(validator.$validator) ? Object.assign({}, validator) : {\n    $validator: validator\n  };\n}\nfunction isPromise(object) {\n  return isObject(object) && isFunction(object.then);\n}\n/**\n * Unwraps a ValidatorResponse object, into a boolean.\n * @param {ValidatorResponse} result\n * @return {boolean}\n */\n\nfunction unwrapValidatorResponse(result) {\n  if (typeof result === 'object') return result.$valid;\n  return result;\n}\n/**\n * Unwraps a `NormalizedValidator` object, returning its validator function.\n * @param {NormalizedValidator | Function} validator\n * @return {function}\n */\n\nfunction unwrapNormalizedValidator(validator) {\n  return validator.$validator || validator;\n}\n\n/**\n * Allows attaching parameters to a validator\n * @param {Object} $params\n * @param {NormalizedValidator|Function} $validator\n * @return {NormalizedValidator}\n */\n\nfunction withParams($params, $validator) {\n  if (!isObject($params)) throw new Error(`[@vuelidate/validators]: First parameter to \"withParams\" should be an object, provided ${typeof $params}`);\n  if (!isObject($validator) && !isFunction($validator)) throw new Error(`[@vuelidate/validators]: Validator must be a function or object with $validator parameter`);\n  const validatorObj = normalizeValidatorObject($validator);\n  validatorObj.$params = Object.assign({}, validatorObj.$params || {}, $params);\n  return validatorObj;\n}\n\n/**\n * @callback MessageCallback\n * @param {Object} params\n * @return String\n */\n\n/**\n * Attaches a message to a validator\n * @param {MessageCallback | String} $message\n * @param {NormalizedValidator|Function} $validator\n * @return {NormalizedValidator}\n */\n\nfunction withMessage($message, $validator) {\n  if (!isFunction($message) && typeof unref($message) !== 'string') throw new Error(`[@vuelidate/validators]: First parameter to \"withMessage\" should be string or a function returning a string, provided ${typeof $message}`);\n  if (!isObject($validator) && !isFunction($validator)) throw new Error(`[@vuelidate/validators]: Validator must be a function or object with $validator parameter`);\n  const validatorObj = normalizeValidatorObject($validator);\n  validatorObj.$message = $message;\n  return validatorObj;\n}\n\n/**\n * @typedef {function(*): Promise<boolean|ValidatorResponse>} asyncValidator\n */\n\n/**\n * @typedef {Ref<*>[]|function(*): *} watchTargets\n */\n\n/**\n * Wraps validators that returns a Promise.\n * @param {asyncValidator} $validator\n * @param {watchTargets} $watchTargets\n * @return {{$async: boolean, $validator: asyncValidator, $watchTargets: watchTargets}}\n */\n\nfunction withAsync($validator) {\n  let $watchTargets = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const validatorObj = normalizeValidatorObject($validator);\n  return Object.assign({}, validatorObj, {\n    $async: true,\n    $watchTargets\n  });\n}\n\nfunction forEach(validators) {\n  return {\n    $validator(collection) {\n      for (var _len = arguments.length, others = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        others[_key - 1] = arguments[_key];\n      }\n\n      // go over the collection. It can be a ref as well.\n      return unref(collection).reduce((previous, collectionItem, index) => {\n        // go over each property\n        const collectionEntryResult = Object.entries(collectionItem).reduce((all, _ref) => {\n          let [property, $model] = _ref;\n          // get the validators for this property\n          const innerValidators = validators[property] || {}; // go over each validator and run it\n\n          const propertyResult = Object.entries(innerValidators).reduce((all, _ref2) => {\n            let [validatorName, currentValidator] = _ref2;\n            // extract the validator. Supports simple and extended validators.\n            const validatorFunction = unwrapNormalizedValidator(currentValidator); // Call the validator, passing the VM as this, the value, current iterated object and the rest.\n\n            const $response = validatorFunction.call(this, $model, collectionItem, index, ...others); // extract the valid from the result\n\n            const $valid = unwrapValidatorResponse($response); // store the entire response for later\n\n            all.$data[validatorName] = $response;\n            all.$data.$invalid = !$valid || !!all.$data.$invalid;\n            all.$data.$error = all.$data.$invalid; // if not valid, get the $message\n\n            if (!$valid) {\n              let $message = currentValidator.$message || '';\n              const $params = currentValidator.$params || {}; // If $message is a function, we call it with the appropriate parameters\n\n              if (typeof $message === 'function') {\n                $message = $message({\n                  $pending: false,\n                  $invalid: !$valid,\n                  $params,\n                  $model,\n                  $response\n                });\n              } // save the error object\n\n\n              all.$errors.push({\n                $property: property,\n                $message,\n                $params,\n                $response,\n                $model,\n                $pending: false,\n                $validator: validatorName\n              });\n            }\n\n            return {\n              $valid: all.$valid && $valid,\n              $data: all.$data,\n              $errors: all.$errors\n            };\n          }, {\n            $valid: true,\n            $data: {},\n            $errors: []\n          });\n          all.$data[property] = propertyResult.$data;\n          all.$errors[property] = propertyResult.$errors;\n          return {\n            $valid: all.$valid && propertyResult.$valid,\n            $data: all.$data,\n            $errors: all.$errors\n          };\n        }, {\n          $valid: true,\n          $data: {},\n          $errors: {}\n        });\n        return {\n          $valid: previous.$valid && collectionEntryResult.$valid,\n          $data: previous.$data.concat(collectionEntryResult.$data),\n          $errors: previous.$errors.concat(collectionEntryResult.$errors)\n        };\n      }, {\n        $valid: true,\n        $data: [],\n        $errors: []\n      });\n    },\n\n    // collect all the validation errors into a 2 dimensional array, for each entry in the collection, you have an array of error messages.\n    $message: _ref3 => {\n      let {\n        $response\n      } = _ref3;\n      return $response ? $response.$errors.map(context => {\n        return Object.values(context).map(errors => errors.map(error => error.$message)).reduce((a, b) => a.concat(b), []);\n      }) : [];\n    }\n  };\n}\n\n// \"required\" core, used in almost every validator to allow empty values\nconst req = value => {\n  value = unref(value);\n  if (Array.isArray(value)) return !!value.length;\n\n  if (value === undefined || value === null) {\n    return false;\n  }\n\n  if (value === false) {\n    return true;\n  }\n\n  if (value instanceof Date) {\n    // invalid date won't pass\n    return !isNaN(value.getTime());\n  }\n\n  if (typeof value === 'object') {\n    for (let _ in value) return true;\n\n    return false;\n  }\n\n  return !!String(value).length;\n};\n/**\n * Returns the length of an arbitrary value\n * @param {Array|Object|String} value\n * @return {number}\n */\n\nconst len = value => {\n  value = unref(value);\n  if (Array.isArray(value)) return value.length;\n\n  if (typeof value === 'object') {\n    return Object.keys(value).length;\n  }\n\n  return String(value).length;\n};\n/**\n * Regex based validator template\n * @param {RegExp} expr\n * @return {function(*=): boolean}\n */\n\nfunction regex() {\n  for (var _len = arguments.length, expr = new Array(_len), _key = 0; _key < _len; _key++) {\n    expr[_key] = arguments[_key];\n  }\n\n  return value => {\n    value = unref(value);\n    return !req(value) || expr.every(reg => reg.test(value));\n  };\n}\n\nvar common = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  withParams: withParams,\n  withMessage: withMessage,\n  withAsync: withAsync,\n  forEach: forEach,\n  req: req,\n  len: len,\n  regex: regex,\n  unwrap: unref,\n  unwrapNormalizedValidator: unwrapNormalizedValidator,\n  unwrapValidatorResponse: unwrapValidatorResponse,\n  normalizeValidatorObject: normalizeValidatorObject\n});\n\nvar alpha$1 = regex(/^[a-zA-Z]*$/);\n\n/**\n * Validate if value is alphabetical string.\n * @type {NormalizedValidator}\n */\n\nvar alpha = {\n  $validator: alpha$1,\n  $message: 'The value is not alphabetical',\n  $params: {\n    type: 'alpha'\n  }\n};\n\nvar alphaNum$1 = regex(/^[a-zA-Z0-9]*$/);\n\n/**\n * Validate if value is alpha-numeric string.\n * @type {NormalizedValidator}\n */\n\nvar alphaNum = {\n  $validator: alphaNum$1,\n  $message: 'The value must be alpha-numeric',\n  $params: {\n    type: 'alphaNum'\n  }\n};\n\nvar numeric$1 = regex(/^\\d*(\\.\\d+)?$/);\n\n/**\n * Check whether a value is numeric.\n * @type NormalizedValidator\n */\n\nvar numeric = {\n  $validator: numeric$1,\n  $message: 'Value must be numeric',\n  $params: {\n    type: 'numeric'\n  }\n};\n\n/**\n * Check if a numeric value is between two values.\n * @param {Ref<Number> | Number} min\n * @param {Ref<Number> | Number} max\n * @return {function(*=): boolean}\n */\n\nfunction between$1 (min, max) {\n  return value => !req(value) || (!/\\s/.test(value) || value instanceof Date) && +unref(min) <= +value && +unref(max) >= +value;\n}\n\n/**\n * Checks if a value is between two values.\n * @param {Ref<Number> | Number} min\n * @param {Ref<Number> | Number} max\n * @return {NormalizedValidator}\n */\n\nfunction between (min, max) {\n  return {\n    $validator: between$1(min, max),\n    $message: _ref => {\n      let {\n        $params\n      } = _ref;\n      return `The value must be between ${$params.min} and ${$params.max}`;\n    },\n    $params: {\n      min,\n      max,\n      type: 'between'\n    }\n  };\n}\n\nconst emailRegex = /^(?:[A-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[A-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9]{2,}(?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nvar email$1 = regex(emailRegex);\n\n/**\n * Validate if value is an email.\n * @type {NormalizedValidator}\n */\n\nvar email = {\n  $validator: email$1,\n  $message: 'Value is not a valid email address',\n  $params: {\n    type: 'email'\n  }\n};\n\n/**\n * Check if a string is an IP Address\n * @param {String} value\n * @returns {boolean}\n */\n\nfunction ipAddress$1 (value) {\n  if (!req(value)) {\n    return true;\n  }\n\n  if (typeof value !== 'string') {\n    return false;\n  }\n\n  const nibbles = value.split('.');\n  return nibbles.length === 4 && nibbles.every(nibbleValid);\n}\n\nconst nibbleValid = nibble => {\n  if (nibble.length > 3 || nibble.length === 0) {\n    return false;\n  }\n\n  if (nibble[0] === '0' && nibble !== '0') {\n    return false;\n  }\n\n  if (!nibble.match(/^\\d+$/)) {\n    return false;\n  }\n\n  const numeric = +nibble | 0;\n  return numeric >= 0 && numeric <= 255;\n};\n\n/**\n * Validate if value is an ipAddress string.\n * @type {NormalizedValidator}\n */\n\nvar ipAddress = {\n  $validator: ipAddress$1,\n  $message: 'The value is not a valid IP address',\n  $params: {\n    type: 'ipAddress'\n  }\n};\n\n/**\n * Check if value is a properly formatted Mac Address.\n * @param {String | Ref<String>} [separator]\n * @returns {function(*): boolean}\n */\n\nfunction macAddress$1 () {\n  let separator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ':';\n  return value => {\n    separator = unref(separator);\n\n    if (!req(value)) {\n      return true;\n    }\n\n    if (typeof value !== 'string') {\n      return false;\n    }\n\n    const parts = typeof separator === 'string' && separator !== '' ? value.split(separator) : value.length === 12 || value.length === 16 ? value.match(/.{2}/g) : null;\n    return parts !== null && (parts.length === 6 || parts.length === 8) && parts.every(hexValid);\n  };\n}\n\nconst hexValid = hex => hex.toLowerCase().match(/^[0-9a-f]{2}$/);\n\n/**\n * Validate if value is a valid Mac Address string.\n * @returns {NormalizedValidator}\n */\n\nfunction macAddress (separator) {\n  return {\n    $validator: macAddress$1(separator),\n    $message: 'The value is not a valid MAC Address',\n    $params: {\n      type: 'macAddress'\n    }\n  };\n}\n\n/**\n * Check if provided value has a maximum length\n * @param {Number | Ref<Number>} length\n * @returns {function(Array|Object|String): boolean}\n */\n\nfunction maxLength$1 (length) {\n  return value => !req(value) || len(value) <= unref(length);\n}\n\n/**\n * Validate the max length of a string.\n * @param {Number} max\n * @return {NormalizedValidator}\n */\n\nfunction maxLength (max) {\n  return {\n    $validator: maxLength$1(max),\n    $message: _ref => {\n      let {\n        $params\n      } = _ref;\n      return `The maximum length allowed is ${$params.max}`;\n    },\n    $params: {\n      max,\n      type: 'maxLength'\n    }\n  };\n}\n\n/**\n * Check if value is above a threshold.\n * @param {Number | Ref<Number>} length\n * @returns {function(Array|Object|String): boolean}\n */\n\nfunction minLength$1 (length) {\n  return value => !req(value) || len(value) >= unref(length);\n}\n\n/**\n * Check if value is above a threshold.\n * @param {Number | Ref<Number>} min\n * @returns {NormalizedValidator}\n */\n\nfunction minLength (min) {\n  return {\n    $validator: minLength$1(min),\n    $message: _ref => {\n      let {\n        $params\n      } = _ref;\n      return `This field should be at least ${$params.min} characters long`;\n    },\n    $params: {\n      min,\n      type: 'minLength'\n    }\n  };\n}\n\n/**\n * Validates if a value is empty.\n * @param {String | Array | Date | Object} value\n * @returns {boolean}\n */\n\nfunction required$1 (value) {\n  if (typeof value === 'string') {\n    value = value.trim();\n  }\n\n  return req(value);\n}\n\n/**\n * Check if a value is empty or not.\n * @type {NormalizedValidator}\n */\n\nvar required = {\n  $validator: required$1,\n  $message: 'Value is required',\n  $params: {\n    type: 'required'\n  }\n};\n\nconst validate$1 = (prop, val) => prop ? req(typeof val === 'string' ? val.trim() : val) : true;\n/**\n * Returns required if the passed property is truthy\n * @param {Boolean | String | function(any): Boolean | Ref<string | boolean>} propOrFunction\n * @return {function(value: *, parentVM: object): Boolean}\n */\n\n\nfunction requiredIf$1(propOrFunction) {\n  return function (value, parentVM) {\n    if (typeof propOrFunction !== 'function') {\n      return validate$1(unref(propOrFunction), value);\n    }\n\n    const result = propOrFunction.call(this, value, parentVM);\n    return validate$1(result, value);\n  };\n}\n\n/**\n * Returns required if the passed property is truthy\n * @param {Boolean | String | function(): (Boolean | Promise<boolean>)} prop\n * @return {NormalizedValidator}\n */\n\nfunction requiredIf (prop) {\n  return {\n    $validator: requiredIf$1(prop),\n    $message: 'The value is required',\n    $params: {\n      type: 'requiredIf',\n      prop\n    }\n  };\n}\n\nconst validate = (prop, val) => !prop ? req(typeof val === 'string' ? val.trim() : val) : true;\n/**\n * Returns required if the passed property is falsy.\n * @param {Boolean | String | function(any): Boolean | Ref<string | boolean>} propOrFunction\n * @return {function(value: *, parentVM: object): Boolean}\n */\n\n\nfunction requiredUnless$1(propOrFunction) {\n  return function (value, parentVM) {\n    if (typeof propOrFunction !== 'function') {\n      return validate(unref(propOrFunction), value);\n    }\n\n    const result = propOrFunction.call(this, value, parentVM);\n    return validate(result, value);\n  };\n}\n\n/**\n * Returns required unless the passed property is truthy\n * @param {Boolean | String | function(): (Boolean | Promise<boolean>)} prop\n * @return {NormalizedValidator}\n */\n\nfunction requiredUnless (prop) {\n  return {\n    $validator: requiredUnless$1(prop),\n    $message: 'The value is required',\n    $params: {\n      type: 'requiredUnless',\n      prop\n    }\n  };\n}\n\n/**\n * Check if two values are identical.\n * @param {*} equalTo\n * @return {function(*=): boolean}\n */\n\nfunction sameAs$1 (equalTo) {\n  return value => unref(value) === unref(equalTo);\n}\n\n/**\n * Check if two values are identical\n * @param {*} equalTo\n * @param {String} [otherName]\n * @return {NormalizedValidator}\n */\n\nfunction sameAs (equalTo) {\n  let otherName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'other';\n  return {\n    $validator: sameAs$1(equalTo),\n    $message: _ref => {\n      return `The value must be equal to the ${otherName} value`;\n    },\n    $params: {\n      equalTo,\n      otherName,\n      type: 'sameAs'\n    }\n  };\n}\n\n/**\n * Regex taken from {@link https://gist.github.com/dperini/729294}\n */\n\nconst urlRegex = /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u00a1-\\uffff][a-z0-9\\u00a1-\\uffff_-]{0,62})?[a-z0-9\\u00a1-\\uffff]\\.)+(?:[a-z\\u00a1-\\uffff]{2,}\\.?))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i;\nvar url$1 = regex(urlRegex);\n\n/**\n * Check if a value is a url\n * @type {NormalizedValidator}\n */\n\nvar url = {\n  $validator: url$1,\n  $message: 'The value is not a valid URL address',\n  $params: {\n    type: 'url'\n  }\n};\n\nfunction _await$1(value, then, direct) {\n  if (direct) {\n    return then ? then(value) : value;\n  }\n\n  if (!value || !value.then) {\n    value = Promise.resolve(value);\n  }\n\n  return then ? value.then(then) : value;\n}\n\nfunction syncOr(validators) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return validators.reduce((valid, fn) => {\n      if (unwrapValidatorResponse(valid)) return valid;\n      return unwrapNormalizedValidator(fn).apply(this, args);\n    }, false);\n  };\n}\n\nfunction asyncOr(validators) {\n  return function () {\n    const _this = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return validators.reduce(function (valid, fn) {\n      return _await$1(valid, function (r) {\n        return unwrapValidatorResponse(r) ? r : unwrapNormalizedValidator(fn).apply(_this, args);\n      });\n    }, Promise.resolve(false));\n  };\n}\n/**\n * Returns true when one of the provided functions returns true.\n * @param {...(NormalizedValidator|Function)} validators\n * @return {{$validator: function(...[*]=): (boolean | Promise<boolean>), $async: boolean, $watchTargets: any[]}}\n */\n\n\nfunction or$1() {\n  for (var _len3 = arguments.length, validators = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    validators[_key3] = arguments[_key3];\n  }\n\n  const $async = validators.some(v => v.$async);\n  const $watchTargets = validators.reduce((all, v) => {\n    if (!v.$watchTargets) return all;\n    return all.concat(v.$watchTargets);\n  }, []);\n\n  let $validator = () => false;\n\n  if (validators.length) $validator = $async ? asyncOr(validators) : syncOr(validators);\n  return {\n    $async,\n    $validator,\n    $watchTargets\n  };\n}\n\n/**\n * Returns true when one of the provided functions returns true.\n * @param {...(NormalizedValidator|Function)} validators\n * @return {NormalizedValidator}\n */\n\nfunction or () {\n  return withParams({\n    type: 'or'\n  }, withMessage('The value does not match any of the provided validators', or$1(...arguments)));\n}\n\nfunction _await(value, then, direct) {\n  if (direct) {\n    return then ? then(value) : value;\n  }\n\n  if (!value || !value.then) {\n    value = Promise.resolve(value);\n  }\n\n  return then ? value.then(then) : value;\n}\n/**\n *\n * @param validators\n * @return {function(...[*]=): Promise<boolean>}\n */\n\n\nfunction syncAnd(validators) {\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return validators.reduce((valid, fn) => {\n      if (!unwrapValidatorResponse(valid)) return valid;\n      return unwrapNormalizedValidator(fn).apply(this, args);\n    }, true);\n  };\n}\n\nfunction asyncAnd(validators) {\n  return function () {\n    const _this = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return validators.reduce(function (valid, fn) {\n      return _await(valid, function (r) {\n        return unwrapValidatorResponse(r) ? unwrapNormalizedValidator(fn).apply(_this, args) : r;\n      });\n    }, Promise.resolve(true));\n  };\n}\n/**\n * Returns true when all validators are truthy\n * @param {...(NormalizedValidator | Function)} validators\n * @return {{$validator: function(...[*]=): (boolean | Promise<boolean>), $async: boolean, $watchTargets: any[]}}\n */\n\n\nfunction and$1() {\n  for (var _len3 = arguments.length, validators = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    validators[_key3] = arguments[_key3];\n  }\n\n  const $async = validators.some(v => v.$async);\n  const $watchTargets = validators.reduce((all, v) => {\n    if (!v.$watchTargets) return all;\n    return all.concat(v.$watchTargets);\n  }, []);\n\n  let $validator = () => false;\n\n  if (validators.length) $validator = $async ? asyncAnd(validators) : syncAnd(validators);\n  return {\n    $async,\n    $validator,\n    $watchTargets\n  };\n}\n\n/**\n * Validate if all validators match.\n * @param {...*} validators\n * @returns {NormalizedValidator}\n */\n\nfunction and () {\n  return withParams({\n    type: 'and'\n  }, withMessage('The value does not match all of the provided validators', and$1(...arguments)));\n}\n\n/**\n * Swaps the result of a value\n * @param {NormalizedValidator|Function} validator\n * @returns {function(*=, *=): boolean}\n */\n\nfunction not$1 (validator) {\n  return function (value, vm) {\n    if (!req(value)) return true;\n    const response = unwrapNormalizedValidator(validator).call(this, value, vm);\n    if (!isPromise(response)) return !unwrapValidatorResponse(response);\n    return response.then(r => !unwrapValidatorResponse(r));\n  };\n}\n\n/**\n * Swaps the result of a value\n * @param {NormalizedValidator|Function} validator\n * @returns {NormalizedValidator}\n */\n\nfunction not (validator) {\n  return {\n    $validator: not$1(validator),\n    $message: `The value does not match the provided validator`,\n    $params: {\n      type: 'not'\n    }\n  };\n}\n\n/**\n * Check if a value is above a threshold.\n * @param {String | Number | Ref<Number> | Ref<String>} min\n * @returns {function(*=): boolean}\n */\n\nfunction minValue$1 (min) {\n  return value => !req(value) || (!/\\s/.test(value) || value instanceof Date) && +value >= +unref(min);\n}\n\n/**\n * Check if a value is above a threshold.\n * @param {String | Number | Ref<Number> | Ref<String>} min\n * @returns {NormalizedValidator}\n */\n\nfunction minValue (min) {\n  return {\n    $validator: minValue$1(min),\n    $message: _ref => {\n      let {\n        $params\n      } = _ref;\n      return `The minimum value allowed is ${$params.min}`;\n    },\n    $params: {\n      min,\n      type: 'minValue'\n    }\n  };\n}\n\n/**\n * Check if value is below a threshold.\n * @param {Number | Ref<Number> | Ref<String>} max\n * @returns {function(*=): boolean}\n */\n\nfunction maxValue$1 (max) {\n  return value => !req(value) || (!/\\s/.test(value) || value instanceof Date) && +value <= +unref(max);\n}\n\n/**\n * Check if value is below a threshold.\n * @param {Number | Ref<Number> | Ref<String>} max\n * @return {NormalizedValidator}\n */\n\nvar maxValue = (max => ({\n  $validator: maxValue$1(max),\n  $message: _ref => {\n    let {\n      $params\n    } = _ref;\n    return `The maximum value allowed is ${$params.max}`;\n  },\n  $params: {\n    max,\n    type: 'maxValue'\n  }\n}));\n\n// ^-[0-9]+$ - only for negative integer (minus sign without at least 1 digit is not a number)\n\nvar integer$1 = regex(/(^[0-9]*$)|(^-[0-9]+$)/);\n\n/**\n * Validate if value is integer.\n * @type {NormalizedValidator}\n */\n\nvar integer = {\n  $validator: integer$1,\n  $message: 'Value is not an integer',\n  $params: {\n    type: 'integer'\n  }\n};\n\nvar decimal$1 = regex(/^[-]?\\d*(\\.\\d+)?$/);\n\n/**\n * Validate if value is decimal number.\n * @type {NormalizedValidator}\n */\n\nvar decimal = {\n  $validator: decimal$1,\n  $message: 'Value must be decimal',\n  $params: {\n    type: 'decimal'\n  }\n};\n\n/**\n * Creates a translatable version of `withMessage` helper.\n * @param {function} t - the translation function of your choice\n * @param {function} [messagePath] - a function to generate the message path, passed to `t` for each message. By default it is `validations.${$validator}`\n * @param {function} [messageParams] - a function to augment the params, passed to `t` for each message.\n */\n\nfunction createI18nMessage(_ref) {\n  let {\n    t,\n    messagePath = _ref2 => {\n      let {\n        $validator\n      } = _ref2;\n      return `validations.${$validator}`;\n    },\n    messageParams = params => params\n  } = _ref;\n  return function withI18nMessage(validator) {\n    let {\n      withArguments = false,\n      messagePath: localMessagePath = messagePath,\n      messageParams: localMessageParams = messageParams\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    function message(props) {\n      return t(localMessagePath(props), localMessageParams(Object.assign({\n        model: props.$model,\n        property: props.$property,\n        pending: props.$pending,\n        invalid: props.$invalid,\n        response: props.$response,\n        validator: props.$validator,\n        propertyPath: props.$propertyPath\n      }, props.$params)));\n    }\n\n    if (withArguments && typeof validator === 'function') {\n      return function () {\n        return withMessage(message, validator(...arguments));\n      };\n    }\n\n    return withMessage(message, validator);\n  };\n}\n\nexport { alpha, alphaNum, and, between, createI18nMessage, decimal, email, common as helpers, integer, ipAddress, macAddress, maxLength, maxValue, minLength, minValue, not, numeric, or, required, requiredIf, requiredUnless, sameAs, url };\n","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-5df4231d\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"settings__item\" }\nconst _hoisted_2 = [\"for\"]\nconst _hoisted_3 = [\"id\", \"disabled\"]\nconst _hoisted_4 = [\"disabled\"]\nconst _hoisted_5 = { class: \"save-status\" }\nconst _hoisted_6 = { key: 0 }\nconst _hoisted_7 = {\n  key: 1,\n  class: \"saved\"\n}\nconst _hoisted_8 = {\n  key: 2,\n  class: \"invalid\"\n}\nconst _hoisted_9 = { class: \"errors\" }\nconst _hoisted_10 = {\n  key: 0,\n  class: \"tips\"\n}\nconst _hoisted_11 = { key: 0 }\nconst _hoisted_12 = { key: 1 }\n\nimport useVuelidate from '@vuelidate/core';\nimport {\n  required, minValue, maxValue, helpers, integer,\n} from '@vuelidate/validators';\nimport {\n  reactive, watch, computed, ref,\n} from 'vue';\nimport { DataExchange } from '@/utils/dataexchangeservice';\nimport { BisControlConfigUIItem, BisConfigSettingName, BisControlConfig } from '@/bisconfig-common';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'BisConfigNumSetting',\n  props: {\n    settingId: null,\n    settingUIData: null,\n    initValue: null\n  },\n  setup(__props: any) {\n\nconst props = __props as {\n  settingId: typeof BisConfigSettingName[number] // id настройки\n  settingUIData: BisControlConfigUIItem // описание для настройки\n  initValue: string | number | undefined\n}\n\n\n\n// парсим переменные для отрисовки контрола из пропсов\n// eslint-disable-next-line vue/no-setup-props-destructure\nconst {\n  label, defaultValue, minRangeValue, maxRangeValue,\n} = props.settingUIData;\n\n// создаем переменную для хранения нового значения настройки, инициализируя ее значением с сервера\nconst newSettingValue = ref(props.initValue);\n\n// описываем валидаторы\nconst rules = computed(() => {\n  const localRules = {\n    newSettingValue: {\n      required: helpers.withMessage('Поле не может быть пустым', required),\n      minValue: helpers.withMessage(\n        () => `Введите значение не менее ${minRangeValue}`,\n        minValue(minRangeValue),\n      ),\n      ...(maxRangeValue && {\n        maxValue: helpers.withMessage(\n          () => `Введите значение не более ${maxRangeValue}`,\n          maxValue(maxRangeValue),\n        ),\n      }),\n      integer: helpers.withMessage('Значение должно быть целым числом', integer),\n      $autoDirty: true, //\n      $lazy: true,\n    },\n  };\n  return localRules;\n});\n\n// инициализируем валидации\nconst v$ = useVuelidate(rules, { newSettingValue });\n\n// инстациируем конфиг\n// const config = reactive(new BisConfig());\nconst config = reactive(new DataExchange<BisControlConfig>({ url: '/bis_control_config' }));\n\n// объявляем флаг \"изменение сохранено на сервере\"\nconst isSaved = ref<boolean>(false);\n\n// смотрим, когда posting сменился с true на false\nwatch(() => config.posting, (currPosting, prevPosting) => {\n  if (prevPosting && !currPosting) {\n    if (!config.postingFailed) {\n      isSaved.value = true;\n    } else {\n      isSaved.value = false;\n    }\n  }\n});\n\n// при любых изменениях в input сбрасываем флаг isSaved\nwatch(newSettingValue, () => {\n  isSaved.value = false;\n});\n\n// объявляем флаг наличия надписи \"Сохранено\" (пришлось отделить от isSaved)\nconst needMessageSaved = ref(false);\n\n// смотрим за isSaved, чтобы обнулить поля и сбросить флаг\nwatch(() => isSaved.value, (currSaved) => {\n  if (currSaved) {\n    needMessageSaved.value = true;\n    v$.value.$reset();\n    setTimeout(() => {\n      needMessageSaved.value = false;\n    }, 2000);\n  }\n});\n\n// функция для отправки обновленной части конфига на сервер\nasync function sendConfig() {\n  // отправляем новый конфиг только при успехе всех валидаций\n  const isFormCorrect = await v$.value.newSettingValue.$validate();\n\n  if (isFormCorrect) {\n    config.post({\n      [props.settingId]: newSettingValue.value,\n    });\n  }\n}\n\n// функция сброса значения до значения по умолчанию\nfunction setDefault() {\n  newSettingValue.value = defaultValue;\n  sendConfig();\n}\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"label\", {\n      for: props.settingId\n    }, _toDisplayString(_unref(label)), 9, _hoisted_2),\n    _withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((newSettingValue).value = $event)),\n      type: \"text\",\n      autocomplete: \"off\",\n      id: props.settingId,\n      placeholder: 'Введите значение',\n      disabled: config.posting ? true : false,\n      onKeyup: _cache[1] || (_cache[1] = _withKeys(($event: any) => (sendConfig()), [\"enter\"])),\n      onBlur: _cache[2] || (_cache[2] = ($event: any) => (sendConfig()))\n    }, null, 40, _hoisted_3), [\n      [_vModelText, newSettingValue.value]\n    ]),\n    _createElementVNode(\"button\", {\n      class: \"default-button\",\n      disabled: config.posting ? true : false,\n      onClick: _cache[3] || (_cache[3] = ($event: any) => (setDefault()))\n    }, \"По умолчанию\", 8, _hoisted_4),\n    _createElementVNode(\"div\", _hoisted_5, [\n      (config.posting)\n        ? (_openBlock(), _createElementBlock(\"small\", _hoisted_6, \"Сохраняется...\"))\n        : (needMessageSaved.value)\n          ? (_openBlock(), _createElementBlock(\"small\", _hoisted_7, \"Сохранено!\"))\n          : (config.postingFailed)\n            ? (_openBlock(), _createElementBlock(\"small\", _hoisted_8, \"Значение не сохранено\"))\n            : _createCommentVNode(\"\", true)\n    ]),\n    _createElementVNode(\"div\", _hoisted_9, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(v$).$errors, (error) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: error.$uid\n        }, [\n          _createElementVNode(\"small\", null, _toDisplayString(error.$message), 1)\n        ]))\n      }), 128))\n    ]),\n    (!_unref(v$).$dirty)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n          (_unref(minRangeValue) && _unref(maxRangeValue))\n            ? (_openBlock(), _createElementBlock(\"small\", _hoisted_11, \" Введите число в диапазоне \" + _toDisplayString(_unref(minRangeValue)) + \"-\" + _toDisplayString(_unref(maxRangeValue)), 1))\n            : (!_unref(maxRangeValue))\n              ? (_openBlock(), _createElementBlock(\"small\", _hoisted_12, \" Введите число не менее \" + _toDisplayString(_unref(minRangeValue)), 1))\n              : _createCommentVNode(\"\", true)\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","import script from \"./BisConfigNumSetting.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./BisConfigNumSetting.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./BisConfigNumSetting.vue?vue&type=style&index=0&id=5df4231d&scoped=true&lang=css\"\n\nimport exportComponent from \"E:\\\\Web\\\\webclient\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5df4231d\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-540f88a6\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"settings__item\" }\nconst _hoisted_2 = [\"for\"]\nconst _hoisted_3 = [\"id\", \"disabled\"]\nconst _hoisted_4 = [\"disabled\"]\nconst _hoisted_5 = { class: \"save-status\" }\nconst _hoisted_6 = { key: 0 }\nconst _hoisted_7 = {\n  key: 1,\n  class: \"saved\"\n}\nconst _hoisted_8 = {\n  key: 2,\n  class: \"invalid\"\n}\n\nimport { reactive, ref, watch } from \"vue\";\nimport { DataExchange } from \"@/utils/dataexchangeservice\";\nimport { BisControlConfigUIItem, BisConfigSettingName, BisControlConfig } from \"@/bisconfig-common\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'BisConfigBoolSetting',\n  props: {\n    settingId: null,\n    settingUIData: null,\n    initValue: { type: [Boolean, null] }\n  },\n  setup(__props: any) {\n\nconst props = __props as {\n  settingId: typeof BisConfigSettingName[number]; // id настройки\n  settingUIData: BisControlConfigUIItem; // описание для настройки\n  initValue: boolean | undefined; // значение для инициализации чекбокса\n}\n\n\n\n// парсим переменные для отрисовки контрола из пропсов\n// eslint-disable-next-line vue/no-setup-props-destructure\nconst { label } = props.settingUIData;\nconst defaultValue = !!props.settingUIData.defaultValue;\nconst initValue = !!props.initValue;\n\n// инстациируем конфиг\n// const config = reactive(new BisConfig());\nconst config = reactive(new DataExchange<BisControlConfig>({ url: \"/bis_control_config\" }));\n\n// переменная для хранения нового значения настройки\nconst newSettingValue = ref(initValue);\n\n// объявляем флаг \"изменение сохранено на сервере\"\nconst isSaved = ref<boolean>(false);\n\n// смотрим, когда posting сменился с true на false\nwatch(\n  () => config.posting,\n  (posting, prevPosting) => {\n    if (prevPosting && !posting) {\n      if (!config.postingFailed) {\n        isSaved.value = true;\n      } else {\n        isSaved.value = false;\n        newSettingValue.value = !newSettingValue.value;\n      }\n    }\n  }\n);\n\n// смотрим за isSaved, чтобы сбросить флаг\nwatch(\n  () => isSaved.value,\n  (currSaved) => {\n    if (currSaved) {\n      setTimeout(() => {\n        isSaved.value = false;\n      }, 1500);\n    }\n  }\n);\n\n// функция для отправки обновленной части конфига на сервер\nfunction sendConfig() {\n  config.post({\n    [props.settingId]: newSettingValue.value,\n  });\n}\n\n// функция сброса значения до значения по умолчанию\nfunction setDefault() {\n  if (!(newSettingValue.value === defaultValue)) {\n    newSettingValue.value = defaultValue;\n    sendConfig();\n  }\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"label\", {\n      for: props.settingId\n    }, _toDisplayString(_unref(label)), 9, _hoisted_2),\n    _withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((newSettingValue).value = $event)),\n      id: props.settingId,\n      disabled: config.posting ? true : false,\n      type: \"checkbox\",\n      onChange: _cache[1] || (_cache[1] = ($event: any) => (sendConfig()))\n    }, null, 40, _hoisted_3), [\n      [_vModelCheckbox, newSettingValue.value]\n    ]),\n    _createElementVNode(\"button\", {\n      disabled: config.posting ? true : false,\n      onClick: _cache[2] || (_cache[2] = ($event: any) => (setDefault()))\n    }, \"По умолчанию\", 8, _hoisted_4),\n    _createElementVNode(\"div\", _hoisted_5, [\n      (config.posting)\n        ? (_openBlock(), _createElementBlock(\"small\", _hoisted_6, \"Сохраняется...\"))\n        : (isSaved.value)\n          ? (_openBlock(), _createElementBlock(\"small\", _hoisted_7, \"Сохранено!\"))\n          : (config.postingFailed)\n            ? (_openBlock(), _createElementBlock(\"small\", _hoisted_8, \"Значение не сохранено\"))\n            : _createCommentVNode(\"\", true)\n    ])\n  ]))\n}\n}\n\n})","import script from \"./BisConfigBoolSetting.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./BisConfigBoolSetting.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./BisConfigBoolSetting.vue?vue&type=style&index=0&id=540f88a6&scoped=true&lang=css\"\n\nimport exportComponent from \"E:\\\\Web\\\\webclient\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-540f88a6\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Конфигурация станции\", -1)\nconst _hoisted_2 = { class: \"wrapper\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"settings\"\n}\n\nimport { BisControlConfigUI, BisControlConfig } from \"@/bisconfig-common\";\nimport { setupDataService } from \"@/utils/dataexchangeservice\";\nimport BisConfigNumSetting from \"./BisConfigNumSetting.vue\";\nimport BisConfigBoolSetting from \"./BisConfigBoolSetting.vue\";\n\n// инстациируем конфиг\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'BisConfig',\n  setup(__props) {\n\nconst configParent = setupDataService<BisControlConfig>({ url: \"/bis_control_config\" });\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _hoisted_1,\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_unref(configParent).available)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(BisControlConfigUI).num, (settingUIData, settingId) => {\n              return (_openBlock(), _createBlock(BisConfigNumSetting, {\n                key: settingId,\n                settingId: settingId,\n                settingUIData: settingUIData,\n                initValue: _unref(configParent).data ? _unref(configParent).data[settingId] : ''\n              }, null, 8, [\"settingId\", \"settingUIData\", \"initValue\"]))\n            }), 128)),\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(BisControlConfigUI).bool, (settingUIData, settingId) => {\n              return (_openBlock(), _createBlock(BisConfigBoolSetting, {\n                key: settingId,\n                settingId: settingId,\n                settingUIData: settingUIData,\n                initValue: _unref(configParent).data ? _unref(configParent).data[settingId] : false\n              }, null, 8, [\"settingId\", \"settingUIData\", \"initValue\"]))\n            }), 128))\n          ]))\n        : _createCommentVNode(\"\", true)\n    ])\n  ]))\n}\n}\n\n})","import script from \"./BisConfig.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./BisConfig.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./BisConfig.vue?vue&type=style&index=0&id=b9d3b09c&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport BisConfigVue from '@/components/BisConfig/BisConfig.vue';\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'BisSettings',\n  setup(__props) {\n\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(BisConfigVue))\n}\n}\n\n})","import script from \"./BisSettings.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./BisSettings.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./BisConfigNumSetting.vue?vue&type=style&index=0&id=5df4231d&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./BisConfigBoolSetting.vue?vue&type=style&index=0&id=540f88a6&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./BisConfig.vue?vue&type=style&index=0&id=b9d3b09c&lang=css\""],"sourceRoot":""}